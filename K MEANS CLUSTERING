# Import necessary libraries
import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error
import matplotlib.pyplot as plt

# Generate synthetic dataset (you should replace this with your actual dataset)
np.random.seed(42)
data_size = 100
square_footage = np.random.randint(1000, 3000, size=data_size)
bedrooms = np.random.randint(1, 5, size=data_size)
bathrooms = np.random.randint(1, 4, size=data_size)
prices = 100000 + 150 * square_footage + 20000 * bedrooms + 25000 * bathrooms + np.random.normal(0, 10000, size=data_size)

# Create a DataFrame from the synthetic data
df = pd.DataFrame({'SquareFootage': square_footage, 'Bedrooms': bedrooms, 'Bathrooms': bathrooms, 'Price': prices})
X = df[['SquareFootage', 'Bedrooms', 'Bathrooms']]
y = df['Price']
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)
model = LinearRegression()
model.fit(X_train, y_train)
y_pred = model.predict(X_test)
mse = mean_squared_error(y_test, y_pred)
print(f'Mean Squared Error: {mse}')
plt.scatter(y_test, y_pred)
plt.xlabel('Actual Prices')
plt.ylabel('Predicted Prices')
plt.title('Actual Prices vs. Predicted Prices')
plt.show()
new_house = np.array([[2000, 3, 2]])  # SquareFootage: 2000, Bedrooms: 3, Bathrooms: 2
predicted_price = model.predict(new_house)
print(f'Predicted Price for the new house: ${predicted_price[0]:,.2f}')
